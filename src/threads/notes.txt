1) class extends Thread
2) implements Runnable 

1.1) extends Thread 
1.2) run()
1.3) using object you need to call start() 



synchronized --> lock 

1) instance level lock
 	instance variable 
 	tejas , prisha 
 	sriya 
 	
2) class level lock 
	static 
	tejas prisha sriya 
	
//ThreadSum 
//ThreadBank 

	
	
	
	
	[new] 	start()			running | runnable			stop() 	dead	
								yield()  	
								[Active]
	
	
	
								sleep(ms)
								wait() 	notify() notifyAll()
								suspend() resume()
								wait(ms) --auto notify 
								
	
								[block]
	
	
----------------------------------------------------------------------

concurrency => 
	
	t1
	t2
	t3 
	
	jvm -> t1(10) t2(10) t3(10) -> 30min 
	
	java.util.concurrent 
	
	java  -> pool ->  t1 t2 t3 -> queue -> t1 t2 t3 t4 t5 t6 t7 
	
	processor -> workers [16]
	
	w1 w2 w3 w4 w5
	t1 t2 t3 t4 t5
		
----------------------------------------------------------------------

1) ThreadSum
	-> create 1 thread that find sun of 1 to 100 
	-> sum of 1 to 100 stores in instance variable of ThreadSum class 
	-> you need print sum inside the main method 
		
2) ThreadSumMulti
	-> You have 1 class ThreadSumMulti
	-> it has 1 instance variable sum 
	-> you need to create three thread of this ThreadSumMulti class 
	-> first thread will do sum of 1 to 20 
	-> second thread will do sum of 21 to 40 
	-> third thread will do sum of 41 to 60 
	-> now in main method print variable sum that has sum of all three thread. 

3) Try to use Concurrency in ThreadsumMulti [ program1 and program2]	
  
  
























	
	
	
	
	
	